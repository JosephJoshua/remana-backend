// Code generated by ogen, DO NOT EDIT.

package genapi

import (
	"fmt"
	"net/url"
)

func (s *ErrorStatusCode) Error() string {
	return fmt.Sprintf("code %d: %+v", s.StatusCode, s.Response)
}

// Ref: #
type Error struct {
	Code    int32  `json:"code"`
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *Error) GetCode() int32 {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *Error) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *Error) SetCode(val int32) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *Error) SetMessage(val string) {
	s.Message = val
}

// ErrorStatusCode wraps Error with StatusCode.
type ErrorStatusCode struct {
	StatusCode int
	Response   Error
}

// GetStatusCode returns the value of StatusCode.
func (s *ErrorStatusCode) GetStatusCode() int {
	return s.StatusCode
}

// GetResponse returns the value of Response.
func (s *ErrorStatusCode) GetResponse() Error {
	return s.Response
}

// SetStatusCode sets the value of StatusCode.
func (s *ErrorStatusCode) SetStatusCode(val int) {
	s.StatusCode = val
}

// SetResponse sets the value of Response.
func (s *ErrorStatusCode) SetResponse(val Error) {
	s.Response = val
}

// Ref: #
type LoginCodePrompt struct {
	LoginCode string `json:"login_code"`
}

// GetLoginCode returns the value of LoginCode.
func (s *LoginCodePrompt) GetLoginCode() string {
	return s.LoginCode
}

// SetLoginCode sets the value of LoginCode.
func (s *LoginCodePrompt) SetLoginCode(val string) {
	s.LoginCode = val
}

// LoginCodePromptNoContent is response for LoginCodePrompt operation.
type LoginCodePromptNoContent struct {
	SetCookie string
}

// GetSetCookie returns the value of SetCookie.
func (s *LoginCodePromptNoContent) GetSetCookie() string {
	return s.SetCookie
}

// SetSetCookie sets the value of SetCookie.
func (s *LoginCodePromptNoContent) SetSetCookie(val string) {
	s.SetCookie = val
}

// Ref: #
type LoginCodePromptRedirection struct {
	// [URL to POST with login code](#/auth/loginCodePrompt).
	PromptURL url.URL `json:"prompt_url"`
}

// GetPromptURL returns the value of PromptURL.
func (s *LoginCodePromptRedirection) GetPromptURL() url.URL {
	return s.PromptURL
}

// SetPromptURL sets the value of PromptURL.
func (s *LoginCodePromptRedirection) SetPromptURL(val url.URL) {
	s.PromptURL = val
}

// LoginCodePromptRedirectionHeaders wraps LoginCodePromptRedirection with response headers.
type LoginCodePromptRedirectionHeaders struct {
	SetCookie OptString
	Response  LoginCodePromptRedirection
}

// GetSetCookie returns the value of SetCookie.
func (s *LoginCodePromptRedirectionHeaders) GetSetCookie() OptString {
	return s.SetCookie
}

// GetResponse returns the value of Response.
func (s *LoginCodePromptRedirectionHeaders) GetResponse() LoginCodePromptRedirection {
	return s.Response
}

// SetSetCookie sets the value of SetCookie.
func (s *LoginCodePromptRedirectionHeaders) SetSetCookie(val OptString) {
	s.SetCookie = val
}

// SetResponse sets the value of Response.
func (s *LoginCodePromptRedirectionHeaders) SetResponse(val LoginCodePromptRedirection) {
	s.Response = val
}

func (*LoginCodePromptRedirectionHeaders) loginRes() {}

// Ref: #
type LoginCredentials struct {
	Username  string `json:"username"`
	Password  string `json:"password"`
	StoreCode string `json:"store_code"`
}

// GetUsername returns the value of Username.
func (s *LoginCredentials) GetUsername() string {
	return s.Username
}

// GetPassword returns the value of Password.
func (s *LoginCredentials) GetPassword() string {
	return s.Password
}

// GetStoreCode returns the value of StoreCode.
func (s *LoginCredentials) GetStoreCode() string {
	return s.StoreCode
}

// SetUsername sets the value of Username.
func (s *LoginCredentials) SetUsername(val string) {
	s.Username = val
}

// SetPassword sets the value of Password.
func (s *LoginCredentials) SetPassword(val string) {
	s.Password = val
}

// SetStoreCode sets the value of StoreCode.
func (s *LoginCredentials) SetStoreCode(val string) {
	s.StoreCode = val
}

// LoginNoContent is response for Login operation.
type LoginNoContent struct {
	SetCookie OptString
}

// GetSetCookie returns the value of SetCookie.
func (s *LoginNoContent) GetSetCookie() OptString {
	return s.SetCookie
}

// SetSetCookie sets the value of SetCookie.
func (s *LoginNoContent) SetSetCookie(val OptString) {
	s.SetCookie = val
}

func (*LoginNoContent) loginRes() {}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

type SessionCookie struct {
	APIKey string
}

// GetAPIKey returns the value of APIKey.
func (s *SessionCookie) GetAPIKey() string {
	return s.APIKey
}

// SetAPIKey sets the value of APIKey.
func (s *SessionCookie) SetAPIKey(val string) {
	s.APIKey = val
}
