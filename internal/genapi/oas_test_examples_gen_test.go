// Code generated by ogen, DO NOT EDIT.

package genapi

import (
	"github.com/go-faster/jx"

	std "encoding/json"
	"testing"

	"github.com/stretchr/testify/require"
)

func TestError_EncodeDecode(t *testing.T) {
	var typ Error
	typ.SetFake()

	e := jx.Encoder{}
	typ.Encode(&e)
	data := e.Bytes()
	require.True(t, std.Valid(data), "Encoded: %s", data)

	var typ2 Error
	require.NoError(t, typ2.Decode(jx.DecodeBytes(data)))
}
func TestLoginCodePrompt_EncodeDecode(t *testing.T) {
	var typ LoginCodePrompt
	typ.SetFake()

	e := jx.Encoder{}
	typ.Encode(&e)
	data := e.Bytes()
	require.True(t, std.Valid(data), "Encoded: %s", data)

	var typ2 LoginCodePrompt
	require.NoError(t, typ2.Decode(jx.DecodeBytes(data)))
}
func TestLoginCodePromptRedirection_EncodeDecode(t *testing.T) {
	var typ LoginCodePromptRedirection
	typ.SetFake()

	e := jx.Encoder{}
	typ.Encode(&e)
	data := e.Bytes()
	require.True(t, std.Valid(data), "Encoded: %s", data)

	var typ2 LoginCodePromptRedirection
	require.NoError(t, typ2.Decode(jx.DecodeBytes(data)))
}
func TestLoginCredentials_EncodeDecode(t *testing.T) {
	var typ LoginCredentials
	typ.SetFake()

	e := jx.Encoder{}
	typ.Encode(&e)
	data := e.Bytes()
	require.True(t, std.Valid(data), "Encoded: %s", data)

	var typ2 LoginCredentials
	require.NoError(t, typ2.Decode(jx.DecodeBytes(data)))
}
